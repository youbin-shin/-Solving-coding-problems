N, M = map(int, input().split())
tetromino = [
    [[0, 0], [0, 1], [0, 2], [0, 3]], # 파란블록
    [[0, 0], [1, 0], [2, 0], [3, 0]], # 파란블록 회전
    [[0, 0], [0, 1], [1, 0], [1, 1]], # 노란블록
    [[0, 0], [1, 0], [2, 0], [2, 1]], # 주황블록
    [[0, 0], [0, 1], [0, 2], [-1, 2]], # 주황블록 회전
    [[0, 0], [0, 1], [1, 1], [2, 1]], # 주황블록 회전
    [[0, 0], [0, 1], [0, 2], [1, 0]], # 주황블록 회전
    [[0, 0], [0, 1], [-1, 1], [-2, 1]], # 주황블록 대칭
    [[0, 0], [0, 1], [0, 2], [1, 2]], # 주황블록 대칭 회전
    [[0, 0], [0, 1], [1, 0], [2, 0]], # 주황블록 대칭 회전
    [[0, 0], [1, 0], [1, 1], [1, 2]], # 주황블록 대칭 회전
    [[0, 0], [1, 0], [1, 1], [2, 1]], # 초록블록
    [[0, 0], [0, 1], [-1, 1], [-1, 2]], # 초록블록 회전
    [[0, 0], [0, 1], [-1, 1], [1, 0]], # 초록블록 회전
    [[0, 0], [0, 1], [1, 1], [1, 2]], # 초록블록 회전
    [[0, 0], [0, 1], [0, 2], [1, 1]], # 핑크블록
    [[0, 0], [1, 0], [2, 0], [1, 1]], # 핑크블록 회전
    [[0, 0], [0, 1], [0, 2], [-1, 1]], # 핑크블록 회전
    [[0, 0], [0, 1], [-1, 1], [1, 1]] # 핑크블록 회전
]

board = [list(map(int, input().split())) for _ in range(N)]
max_sum = 0
for y in range(N):
    for x in range(M):
        for tetro in tetromino: # 모든 위치 별로 tetromino 넣어보기
            temp_sum = 0
            flag = True
            for t in range(len(tetro)):
                ny, nx = y + tetro[t][0], x + tetro[t][1]
                if 0 <= ny < N and 0 <= nx < M:
                    temp_sum += board[ny][nx]
                else: # 해당 블록이 경계를 벗어나는 경우
                    flag = False 
                    break
            if flag and max_sum < temp_sum:
                max_sum = temp_sum
print(max_sum)